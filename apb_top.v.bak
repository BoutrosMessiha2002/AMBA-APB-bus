module apb_top #(parameter ADDRESS=8, parameter DATA =8, parameter LOCATION=64)(
input PCLK,PRESETn,transfer,READ_WRITE,
input [ADDRESS-1:0] apb_write_paddr,apb_read_paddr,
input [DATA-1:0] apb_write_data,
output [DATA-1:0] apb_read_data_out);
wire PWRITE;
wire PREADY;
wire PSEL1;
wire PENABLE;
wire [ADDRESS-1:0] paddr;
wire [DATA-1:0] pwdata,prdata;

master_apb #(.ADDR_WIDTH(ADDRESS),.DATA_WIDTH(DATA)) master(
.PCLK(PCLK),
.PRESETn(PRESETn),
.apb_write_paddr(apb_write_paddr),
.apb_write_data(apb_write_data),
.apb_read_paddr(apb_read_paddr),
.READ_WRITE(READ_WRITE),
.PREADY(PREADY),
.transfer(transfer),
.PRDATA(PRDATA),
.PWRITE(PWRITE),
.PSEL(PSEL1),
.PENABLE(PENABLE),
.PADDR(paddr),
.PWDATA(pwdata),
.apb_read_data_out(apb_read_data_out));

RAM_slave #(.ADDRESS(ADDRESS),.DATA(DATA), .LOCATION(LOCATION)) slave_dut (
.PWRITE(PWRITE),
.PCLK(PCLK),
.PRESETn(PRESETn),
.PSEL1(PSEL1),
.PENABLE(PENABLE),
.paddr(paddr),
.pwdata(pwdata),
.prdata(prdata),
.PREADY(PREADY)
);


endmodule

